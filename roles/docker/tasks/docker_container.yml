---
# tasks file for roles/docker docker_container
- name: Run command(s) to - {{ project.definition.services.s3.container_name }}
  community.docker.docker_container_exec:
    command: "{{ item }}"
    container: "{{ project.definition.services.s3.container_name }}"
  with_items:
    - /bin/sh -c "mc alias set myminio https://{{ inventory_hostname }}:{{ project.definition.services.s3.s3_api_port }} {{ project.definition.services.s3.access_key }} {{ project.definition.services.s3.secret_key }} --insecure"
    - /bin/sh -c "mc mb --with-lock myminio/vspheredev --insecure"
    - /bin/sh -c "mc mb --with-lock myminio/vspheretest --insecure"
    - /bin/sh -c "mc mb --with-lock myminio/vsphereuat --insecure"
    - /bin/sh -c "mc mb --with-lock myminio/vsphereprod --insecure"

- name: Run command(s) to - {{ project.definition.services.vault.container_name }}
  community.docker.docker_container_exec:
    command: "{{ item }}"
    container: "{{ project.definition.services.vault.container_name }}"
  with_items:
    - /bin/sh -c "vault auth enable userpass"
    - /bin/sh -c "vault secrets enable -version={{ project.definition.services.vault.secrets_version }} kv"
    - /bin/sh -c "vault policy write {{ project.policy_file_name }} /vault/{{ prerequisites.project.0.dirs.3 }}/{{ project.policy_file_name }}.hcl"
    - /bin/sh -c "vault write auth/userpass/users/{{ project.definition.services.vault.secret_username }} password={{ project.definition.services.vault.secret_password }} policies={{ project.policy_file_name }}"
    - /bin/sh -c "vault kv put {{ project.definition.services.vault.s3_path }} {{ project.definition.services.vault.key_username }}={{ project.definition.services.s3.access_key }} {{ project.definition.services.vault.key_password }}={{ project.definition.services.s3.secret_key }}"
