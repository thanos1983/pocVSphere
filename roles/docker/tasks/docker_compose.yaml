---
# tasks file for roles/docker docker_compose
- community.docker.docker_compose:
    project_name: "{{ project.name }}"
    definition:
      version: "{{ project.definition.version }}"
      services:
        #        vault:
        #          image: postgres
        s3:
          image: "{{ project.definition.services.s3.image }}"
          restart: "{{ project.definition.services.s3.restart }}"
          command: "server /data --console-address ':{{ project.definition.services.s3.ui_port }}'"
          user: "{{ project.definition.services.s3.user.id }}:{{ project.definition.services.s3.user.group }}"
          healthcheck:
            test: ["CMD", "curl", "-If", "--cacert", ".minio/certs/public.crt", "{{ project.definition.services.s3.s3_bucket.endpoint_url }}:{{ project.definition.services.s3.ui_port }}"]
            timeout: "{{ project.definition.services.s3.healthcheck.timeout }}"
            retries: "{{ project.definition.services.s3.healthcheck.retries }}"
            interval: "{{ project.definition.services.s3.healthcheck.interval }}"
            start_period: "{{ project.definition.services.s3.healthcheck.start_period }}"
          environment:
            - "MINIO_ROOT_USER={{ project.definition.services.s3.access_key }}"
            - "MINIO_ROOT_PASSWORD={{ project.definition.services.s3.secret_key }}"
            - "MINIO_CERT_PASSWD={{ project.definition.services.s3.cert.passphrase }}"
          volumes:
            - "{{ ansible_env.HOME }}/{{ project.definition.services.s3.dirs.data }}:/data"
            - "{{ ansible_env.HOME }}/{{ project.definition.services.s3.dirs.certs }}:/.minio/certs"
          ports:
            - "{{ project.definition.services.s3.ui_port }}:{{ project.definition.services.s3.ui_port }}"
            - "{{ project.definition.services.s3.console_port }}:{{ project.definition.services.s3.console_port }}"
  #          depends_on:
  #            - vault
  register: output

- ansible.builtin.assert:
    that:
      - "output.services.s3.terraform_s3_1.state.running"
#      - "output.services.vault.terraform_s3_1.state.running"
