---
# vars file for roles/docker
terraform:
  vsphere_version: "2.2.0"
  required_version: "0.13"
  module:
    version_tf_template:
      mode: "0644"
      src: "versions.tf.j2"
      dest: "pocVSphere/tf/versions.tf"

project:
  seconds: 10
  name: terraform
  policy_file_name: "terraform-policy"
  vault_config_file_name: "vault_config"
  definition:
    version: "3.9"
    services:
      vault:
        mode: "0644"
        path: "creds"
        image: "vault"
        policy: "admin"
        secrets_version: 2
        cap_add: "IPC_LOCK"
        s3_path: "creds/s3"
        vault_api_port: 8201
        restart: "on-failure:5"
        container_name: "vault"
        vault_console_port: 8200
        secret_username: "vaultadmin"
        secret_password: "vaultadmin"
        user:
          id: 100
          group: 1000
        healthcheck:
          retries: 1
          interval: 10s
          timeout: 10s
          start_period: 1s
      s3:
        mode: "0644"
        s3_api_port: 9000
        container_name: s3
        storage_class: "EC:0"
        s3_console_port: 9001
        restart: "on-failure:5"
        access_key: "minioadmin"
        secret_key: "minioadmin"
        image: "quay.io/minio/minio"
        healthcheck:
          retries: 1
          interval: 10s
          timeout: 10s
          start_period: 1s
        s3_bucket:
          name: "demo"
          state: present
          versioning: true
          encryption: "none"
          file: "policy.json"
          validate_certs: true
          requester_pays: false
          permission: "private"
          tags:
            value: "demo bucket"
        user:
          id: 1000
          group: 1000

container_commands:
  s3:
    - /bin/sh -c "mc alias set myminio {{ uri.s3.url }} {{ project.definition.services.s3.access_key }} {{ project.definition.services.s3.secret_key }} --insecure"
    - /bin/sh -c "mc mb --with-lock --with-versioning myminio/vSphereDev --insecure"
    - /bin/sh -c "mc mb --with-lock --with-versioning myminio/vSphereTest --insecure"
    - /bin/sh -c "mc mb --with-lock --with-versioning myminio/vSphereUat --insecure"
    - /bin/sh -c "mc mb --with-lock --with-versioning myminio/vSphereProd --insecure"
  vault:
    - /bin/sh -c "vault auth enable userpass"
    - /bin/sh -c "vault secrets enable -path={{ project.definition.services.vault.path }} kv"
    - /bin/sh -c "vault secrets enable -version={{ project.definition.services.vault.secrets_version }} kv"
    - /bin/sh -c "vault policy write {{ project.policy_file_name }} /vault/{{ prerequisites.project.0.dirs.3 }}/{{ project.policy_file_name }}.hcl"
    - /bin/sh -c "vault kv put {{ project.definition.services.vault.s3_path }} {{ project.definition.services.s3.access_key }}={{ project.definition.services.s3.secret_key }}"
    - /bin/sh -c "vault write auth/userpass/users/{{ project.definition.services.vault.secret_username }} password={{ project.definition.services.vault.secret_password }} policies={{ project.policy_file_name }}"

uri:
  s3:
    delay: 1 # Every 1 seconds
    retries: 20 # 20 * 1 seconds
    method: "GET"
    validate_certs: false
    follow_redirects: "all"
    url: "https://{{ inventory_hostname }}:{{ project.definition.services.s3.s3_api_port }}"
  vault:
    delay: 1 # Every 1 seconds
    retries: 20 # 20 * 1 seconds
    method: "GET"
    validate_certs: false
    follow_redirects: "all"
    url: "https://{{ inventory_hostname }}:{{ project.definition.services.vault.vault_api_port }}"

mc:
  name: "mc"
  mode: "0755"
  image: "minio/mc"
  restart: "on-failure:5"
  entrypoint_script: "minio"